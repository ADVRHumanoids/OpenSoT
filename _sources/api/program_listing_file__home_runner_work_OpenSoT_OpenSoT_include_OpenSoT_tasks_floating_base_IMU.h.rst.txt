
.. _program_listing_file__home_runner_work_OpenSoT_OpenSoT_include_OpenSoT_tasks_floating_base_IMU.h:

Program Listing for File IMU.h
==============================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_OpenSoT_OpenSoT_include_OpenSoT_tasks_floating_base_IMU.h>` (``/home/runner/work/OpenSoT/OpenSoT/include/OpenSoT/tasks/floating_base/IMU.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * Copyright (C) 2017 IIT-ADVR
    * Authors: Enrico Mingo Hoffman
    * email:  enrico.mingo@iit.it
    * Permission is granted to copy, distribute, and/or modify this program
    * under the terms of the GNU Lesser General Public License, version 2 or any
    * later version published by the Free Software Foundation.
    *
    * A copy of the license can be found at
    * https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
    *
    * This program is distributed in the hope that it will be useful, but
    * WITHOUT ANY WARRANTY; without even the implied warranty of
    * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
    * Public License for more details
   */
   
   #ifndef _OPENSOT_TASK_FLOATING_BASE_IMU_
   #define _OPENSOT_TASK_FLOATING_BASE_IMU_
   
   #include <OpenSoT/Task.h>
   #include <xbot2_interface/xbotinterface2.h>
   
   namespace OpenSoT{
       namespace tasks{
           namespace floating_base{
           class IMU: public OpenSoT::Task<Eigen::MatrixXd, Eigen::VectorXd>{
               public:
                   typedef std::shared_ptr<IMU> Ptr;
                   IMU(XBot::ModelInterface& robot, XBot::ImuSensor::ConstPtr imu);
                   ~IMU();
   
                   void _update();
   
               private:
                   Eigen::MatrixXd _J;
                   XBot::ModelInterface& _robot;
                   std::string _fb_link;
                   XBot::ImuSensor::ConstPtr _imu;
                   Eigen::Vector3d _angular_velocity;
           };
   
           }
       }
   }
   
   #endif
