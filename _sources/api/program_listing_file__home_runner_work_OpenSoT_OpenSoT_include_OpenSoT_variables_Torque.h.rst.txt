
.. _program_listing_file__home_runner_work_OpenSoT_OpenSoT_include_OpenSoT_variables_Torque.h:

Program Listing for File Torque.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_OpenSoT_OpenSoT_include_OpenSoT_variables_Torque.h>` (``/home/runner/work/OpenSoT/OpenSoT/include/OpenSoT/variables/Torque.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef __OPENSOT_VARIABLES_TORQUE_H__
   #define __OPENSOT_VARIABLES_TORQUE_H__
   
   #include <OpenSoT/utils/Affine.h>
   #include <xbot2_interface/xbotinterface2.h>
   #include <xbot2_interface/common/utils.h>
   
   namespace OpenSoT { namespace variables {
           
   class Torque : public AffineHelper {
     
   public:
       
       Torque(XBot::ModelInterface::Ptr model, 
              const AffineHelper& qddot_var,
              std::vector<std::string> contact_links = std::vector<std::string>(),
              std::vector<AffineHelper> force_vars = std::vector<AffineHelper>()
             );
   
       virtual void update();
       
       
   private:
       
       XBot::ModelInterface::Ptr _model;
       
       int _num_contacts;
       std::vector<std::string> _contact_links;
   
       AffineHelper _qddot_var;
       std::vector<AffineHelper> _force_vars;
       
       Eigen::VectorXd _h;
       std::vector<Eigen::MatrixXd> _Jc;
       Eigen::MatrixXd _B, _S;
       
       Eigen::MatrixXd _C;
       Eigen::VectorXd _d;
       
       AffineHelper _tau;
       
       
   };
           
           
   } }
   
   
   
   
   
   
   #endif
